{
  "title": "Airbnb clone, managing houses",
  "url": "https://flaviocopes.com/clone-airbnb-nextjs-31-managing-houses/",
  "date": "Wed, 05 Jan 2022 07:00:00 +0200",
  "content": "        <blockquote><p>This post is part of a new series where we build a clone of Airbnb with Next.js. <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-introduction/\">See the first post here</a>.</p></blockquote><ul><li>Part 1: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-1-install-nextjs/\">Let&rsquo;s start by installing Next.js</a></li><li>Part 2: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-2-list-houses/\">Build the list of houses</a></li><li>Part 3: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-3-house-detail/\">Build the house detail view</a></li><li>Part 4: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-4-navigation/\">CSS and navigation bar</a></li><li>Part 5: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-5-datepicker/\">Start with the date picker</a></li><li>Part 6: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-6-add-sidebar/\">Add the sidebar</a></li><li>Part 7: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-7-calendar-library/\">Add react-day-picker</a></li><li>Part 8: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-8-add-calendar/\">Add the calendar to the page</a></li><li>Part 9: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-9-configure-calendar/\">Configure the DayPickerInput component</a></li><li>Part 10: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-10-sync-dates/\">Sync the start and end dates</a></li><li>Part 11: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-11-show-price/\">Show the price for the chosen dates</a></li><li>Part 12: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-12-login-signup-forms/\">Login and signup forms</a></li><li>Part 13: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-13-activate-modals/\">Activate the modal</a></li><li>Part 14: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-14-send-registration-data-to-server/\">Send registration data to the server</a></li><li>Part 15: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-15-add-postgres/\">Add postgres</a></li><li>Part 16: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-16-implement-model-and-database-connection/\">Implement model and DB connection</a></li><li>Part 17: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-17-create-session/\">Create a session token</a></li><li>Part 18: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-18-login/\">Implement login</a></li><li>Part 19: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-19-determine-login/\">Determine if we are logged in</a></li><li>Part 20: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-20-logged-in-after-login/\">Change state after we login</a></li><li>Part 21: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-21-login-after-registration/\">Log in after registration</a></li><li>Part 22: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-22-models-data-db/\">Create the models and move data to the db</a></li><li>Part 23: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-23-use-db-instead-of-file/\">Use the database instead of the file</a></li><li>Part 24: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-24-implement-bookings/\">Handle bookings</a></li><li>Part 25: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-25-booked-dates/\">Handle booked dates</a></li><li>Part 26: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-26-prevent-booking/\">Prevent booking if already booked</a></li><li>Part 27: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-27-add-stripe/\">Adding Stripe for payments</a></li><li>Part 28: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-28-stripe-webhooks/\">Airbnb clone, handling Stripe webhooks</a></li><li>Part 29: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-29-view-bookings/\">Airbnb clone, view bookings</a></li><li>Part 30: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-30-clean-bookings/\">Airbnb clone, clean bookings</a></li></ul><p>Now we&rsquo;re going to create the exprience for hosts, rather than for people looking to book hosts&rsquo;s homes.</p><p>In particular, we&rsquo;ll:</p><ul><li>let people add houses, set prices and details</li><li>let people edit houses information</li><li>let people see the bookings for their houses</li></ul><p>Now when you are logged out, on the site, we have a &ldquo;Become a host&rdquo; menu in the Nav bar which we added when we started. I&rsquo;m going to remove it, and instead add a menu to logged in users.</p><p>We&rsquo;ll add this functionality under a new &ldquo;Your houses&rdquo; menu.</p><p>Let&rsquo;s create the link in <code>components/Header.js</code></p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-html\" data-lang=\"html\"> &lt;<span >li</span>&gt;  &lt;<span >Link</span> <span >href</span><span >=</span><span >&#39;/host&#39;</span>&gt;    &lt;<span >a</span>&gt;Your Houses&lt;/<span >a</span>&gt;  &lt;/<span >Link</span>&gt;&lt;/<span >li</span>&gt;</code></pre></div><p>Now create a <code>pages/host/index.js</code> file</p><p>I want to list the houses, and we&rsquo;ll do in a way similar to how we list bookings in <code>pages/bookings.js</code>:</p><blockquote><p><code>pages/host/index.js</code></p></blockquote><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >import</span> <span >axios</span> <span >from</span> <span >&#39;axios&#39;</span><span >import</span> <span >Head</span> <span >from</span> <span >&#39;next/head&#39;</span><span >import</span> <span >Link</span> <span >from</span> <span >&#39;next/link&#39;</span><span >import</span> <span >Cookies</span> <span >from</span> <span >&#39;cookies&#39;</span><span >import</span> { <span >House</span>, <span >User</span> } <span >from</span> <span >&#39;../../model.js&#39;</span><span >import</span> { <span >useEffect</span> } <span >from</span> <span >&#39;react&#39;</span><span >import</span> { <span >useStoreActions</span> } <span >from</span> <span >&#39;easy-peasy&#39;</span><span >import</span> <span >Layout</span> <span >from</span> <span >&#39;../../components/Layout&#39;</span><span >export</span> <span >default</span> <span >function</span> <span >Host</span>({ <span >houses</span>, <span >nextbnb_session</span> }) {  <span >const</span> <span >setLoggedIn</span> <span >=</span> <span >useStoreActions</span>((<span >actions</span>) =&gt; <span >actions</span>.<span >login</span>.<span >setLoggedIn</span>)  <span >useEffect</span>(() =&gt; {    <span >if</span> (<span >nextbnb_session</span>) {      <span >setLoggedIn</span>(<span >true</span>)    }  }, [])  <span >return</span> (    <span >&lt;</span><span >Layout</span>      <span >content</span><span >=</span>{        <span >&lt;</span><span >div</span><span >&gt;</span>          <span >&lt;</span><span >Head</span><span >&gt;</span>            <span >&lt;</span><span >title</span><span >&gt;</span><span >Your</span> <span >houses</span><span >&lt;</span><span >/title&gt;</span>          <span >&lt;</span><span >/Head&gt;</span>          <span >&lt;</span><span >h2</span><span >&gt;</span><span >Your</span> <span >houses</span><span >&lt;</span><span >/h2&gt;</span>          <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;houses&#39;</span><span >&gt;</span>            {<span >houses</span>              <span >?</span> <span >houses</span>.<span >map</span>((<span >house</span>, <span >index</span>) =&gt; {                  <span >return</span> (                    <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;house&#39;</span> <span >key</span><span >=</span>{<span >index</span>}<span >&gt;</span>                      <span >&lt;</span><span >img</span> <span >src</span><span >=</span>{<span >house</span>.<span >picture</span>} <span >alt</span><span >=</span><span >&#39;House picture&#39;</span> <span >/&gt;</span>                      <span >&lt;</span><span >div</span><span >&gt;</span>                        <span >&lt;</span><span >h2</span><span >&gt;</span>                          {<span >house</span>.<span >title</span>} <span >in</span> {<span >house</span>.<span >town</span>}                        <span >&lt;</span><span >/h2&gt;</span>                        <span >&lt;</span><span >p</span><span >&gt;</span>                          <span >&lt;</span><span >Link</span> <span >href</span><span >=</span>{<span >`/houses/</span><span >${</span><span >house</span>.<span >id</span><span >}</span><span >`</span>}<span >&gt;</span>                            <span >&lt;</span><span >a</span><span >&gt;</span><span >View</span> <span >house</span> <span >page</span><span >&lt;</span><span >/a&gt;</span>                          <span >&lt;</span><span >/Link&gt;</span>                        <span >&lt;</span><span >/p&gt;</span>                        <span >&lt;</span><span >p</span><span >&gt;</span>                          <span >&lt;</span><span >Link</span> <span >href</span><span >=</span>{<span >`/host/</span><span >${</span><span >house</span>.<span >id</span><span >}</span><span >`</span>}<span >&gt;</span>                            <span >&lt;</span><span >a</span><span >&gt;</span><span >Edit</span> <span >house</span> <span >details</span><span >&lt;</span><span >/a&gt;</span>                          <span >&lt;</span><span >/Link&gt;</span>                        <span >&lt;</span><span >/p&gt;</span>                      <span >&lt;</span><span >/div&gt;</span>                    <span >&lt;</span><span >/div&gt;</span>                  )                })              <span >:</span> <span >&#39;&#39;</span>}          <span >&lt;</span><span >/div&gt;</span>          <span >&lt;</span><span >style</span> <span >jsx</span><span >&gt;</span>{<span >`</span><span >            .houses {</span><span >              display: grid;</span><span >              grid-template-columns: 100%;</span><span >              grid-gap: 40px;</span><span >            }</span><span ></span><span >            .house {</span><span >              display: grid;</span><span >              grid-template-columns: 30% 70%;</span><span >              grid-gap: 40px;</span><span >            }</span><span ></span><span >            .house img {</span><span >              width: 180px;</span><span >            }</span><span >          `</span>}<span >&lt;</span><span >/style&gt;</span>        <span >&lt;</span><span >/div&gt;</span>      }    <span >/&gt;</span>  )}<span >export</span> <span >async</span> <span >function</span> <span >getServerSideProps</span>({ <span >req</span>, <span >res</span>, <span >query</span> }) {  <span >const</span> <span >cookies</span> <span >=</span> <span >new</span> <span >Cookies</span>(<span >req</span>, <span >res</span>)  <span >const</span> <span >nextbnb_session</span> <span >=</span> <span >cookies</span>.<span >get</span>(<span >&#39;nextbnb_session&#39;</span>)  <span >let</span> <span >houses</span>  <span >if</span> (<span >!</span><span >nextbnb_session</span>) {    <span >res</span>.<span >writeHead</span>(<span >301</span>, {      <span >Location</span><span >:</span> <span >&#39;/&#39;</span>,    })    <span >res</span>.<span >end</span>()    <span >return</span> { <span >props</span><span >:</span> {} }  }  <span >const</span> <span >user</span> <span >=</span> <span >await</span> <span >User</span>.<span >findOne</span>({    <span >where</span><span >:</span> { <span >session_token</span><span >:</span> <span >nextbnb_session</span> },  })  <span >houses</span> <span >=</span> <span >await</span> <span >House</span>.<span >findAndCountAll</span>({ <span >where</span><span >:</span> { <span >owner</span><span >:</span> <span >user</span>.<span >id</span> } })  <span >return</span> {    <span >props</span><span >:</span> {      <span >houses</span><span >:</span> <span >houses</span> <span >?</span> <span >houses</span>.<span >rows</span>.<span >map</span>((<span >house</span>) =&gt; <span >house</span>.<span >dataValues</span>) <span >:</span> <span >null</span>,      <span >nextbnb_session</span>,    },  }}</code></pre></div><p>See, we look for the houses in <code>getServerSideProps</code> calling <code>House.findAndCountAll()</code>, limiting the houses to the ones that the user owns.</p><p>Now let&rsquo;s also list the bookings for the houses a person manages.</p><p>We retrieve them by</p><p>Let&rsquo;s add this capability to the API, first. For each house returned by <code>House.findAll()</code>, we get the <code>id</code> of the house, we add it to an array, and we gather all the bookings that are assigned to the user&rsquo;s houses:</p><blockquote><p><code>server.js</code></p></blockquote><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >server</span>.<span >get</span>(<span >&#39;/api/host/list&#39;</span>, <span >async</span> (<span >req</span>, <span >res</span>) =&gt; {  <span >if</span> (<span >!</span><span >req</span>.<span >session</span>.<span >passport</span> <span >||</span> <span >!</span><span >req</span>.<span >session</span>.<span >passport</span>.<span >user</span>) {    <span >res</span>.<span >writeHead</span>(<span >403</span>, {      <span >&#39;Content-Type&#39;</span><span >:</span> <span >&#39;application/json&#39;</span>,    })    <span >res</span>.<span >end</span>(      <span >JSON</span>.<span >stringify</span>({        <span >status</span><span >:</span> <span >&#39;error&#39;</span>,        <span >message</span><span >:</span> <span >&#39;Unauthorized&#39;</span>,      })    )    <span >return</span>  }  <span >const</span> <span >userEmail</span> <span >=</span> <span >req</span>.<span >session</span>.<span >passport</span>.<span >user</span>  <span >const</span> <span >user</span> <span >=</span> <span >await</span> <span >User</span>.<span >findOne</span>({ <span >where</span><span >:</span> { <span >email</span><span >:</span> <span >userEmail</span> } })  <span >const</span> <span >houses</span> <span >=</span> <span >await</span> <span >House</span>.<span >findAll</span>({    <span >where</span><span >:</span> {      <span >host</span><span >:</span> <span >user</span>.<span >id</span>,    },  })  <span >const</span> <span >houseIds</span> <span >=</span> <span >houses</span>.<span >map</span>((<span >house</span>) =&gt; <span >house</span>.<span >dataValues</span>.<span >id</span>)  <span >const</span> <span >bookingsData</span> <span >=</span> <span >await</span> <span >Booking</span>.<span >findAll</span>({    <span >where</span><span >:</span> {      <span >paid</span><span >:</span> <span >true</span>,      <span >houseId</span><span >:</span> {        [<span >Op</span>.<span >in</span>]<span >:</span> <span >houseIds</span>,      },      <span >endDate</span><span >:</span> {        [<span >Op</span>.<span >gte</span>]<span >:</span> <span >new</span> Date(),      },    },    <span >order</span><span >:</span> [[<span >&#39;startDate&#39;</span>, <span >&#39;ASC&#39;</span>]],  })  <span >const</span> <span >bookings</span> <span >=</span> <span >await</span> Promise.<span >all</span>(    <span >bookingsData</span>.<span >map</span>(<span >async</span> (<span >booking</span>) =&gt; {      <span >return</span> {        <span >booking</span><span >:</span> <span >booking</span>.<span >dataValues</span>,        <span >house</span><span >:</span> <span >houses</span>.<span >filter</span>(          (<span >house</span>) =&gt; <span >house</span>.<span >dataValues</span>.<span >id</span> <span >===</span> <span >booking</span>.<span >dataValues</span>.<span >houseId</span>        )[<span >0</span>].<span >dataValues</span>,      }    })  )  <span >res</span>.<span >writeHead</span>(<span >200</span>, {    <span >&#39;Content-Type&#39;</span><span >:</span> <span >&#39;application/json&#39;</span>,  })  <span >res</span>.<span >end</span>(    <span >JSON</span>.<span >stringify</span>({      <span >bookings</span>,      <span >houses</span>,    })  )})</code></pre></div><p>Now we can use this data in our <code>pages/host/index.js</code> page. We first return the bookings from <code>getInitialProps</code>, and then we display them, a little like we displayed the houses before.</p><p>I added a container HTML and some CSS to make things look good:</p><blockquote><p><code>pages/host/index.js</code></p></blockquote><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >import</span> <span >axios</span> <span >from</span> <span >&#39;axios&#39;</span><span >import</span> <span >Head</span> <span >from</span> <span >&#39;next/head&#39;</span><span >import</span> <span >Link</span> <span >from</span> <span >&#39;next/link&#39;</span><span >import</span> <span >Layout</span> <span >from</span> <span >&#39;../../components/Layout&#39;</span><span >const</span> <span >Host</span> <span >=</span> (<span >props</span>) =&gt; {  <span >return</span> (    <span >&lt;</span><span >Layout</span>      <span >content</span><span >=</span>{        <span >&lt;</span><span >div</span><span >&gt;</span>          <span >&lt;</span><span >Head</span><span >&gt;</span>            <span >&lt;</span><span >title</span><span >&gt;</span><span >Your</span> <span >houses</span><span >&lt;</span><span >/title&gt;</span>          <span >&lt;</span><span >/Head&gt;</span>          <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;container&#39;</span><span >&gt;</span>            <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;houses&#39;</span><span >&gt;</span>              <span >&lt;</span><span >h2</span><span >&gt;</span><span >Your</span> <span >houses</span><span >&lt;</span><span >/h2&gt;</span>              <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;list&#39;</span><span >&gt;</span>                {<span >props</span>.<span >houses</span>.<span >map</span>((<span >house</span>, <span >index</span>) =&gt; {                  <span >return</span> (                    <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;house&#39;</span> <span >key</span><span >=</span>{<span >index</span>}<span >&gt;</span>                      <span >&lt;</span><span >img</span> <span >src</span><span >=</span>{<span >house</span>.<span >picture</span>} <span >alt</span><span >=</span><span >&#39;House picture&#39;</span> <span >/&gt;</span>                      <span >&lt;</span><span >div</span><span >&gt;</span>                        <span >&lt;</span><span >h2</span><span >&gt;</span>                          {<span >house</span>.<span >title</span>} <span >in</span> {<span >house</span>.<span >town</span>}                        <span >&lt;</span><span >/h2&gt;</span>                        <span >&lt;</span><span >p</span><span >&gt;</span>                          <span >&lt;</span><span >Link</span> <span >href</span><span >=</span>{<span >`/houses/</span><span >${</span><span >house</span>.<span >id</span><span >}</span><span >`</span>}<span >&gt;</span>                            <span >&lt;</span><span >a</span><span >&gt;</span><span >View</span> <span >house</span> <span >page</span><span >&lt;</span><span >/a&gt;</span>                          <span >&lt;</span><span >/Link&gt;</span>                        <span >&lt;</span><span >/p&gt;</span>                        <span >&lt;</span><span >p</span><span >&gt;</span>                          <span >&lt;</span><span >Link</span> <span >href</span><span >=</span>{<span >`/host/</span><span >${</span><span >house</span>.<span >id</span><span >}</span><span >`</span>}<span >&gt;</span>                            <span >&lt;</span><span >a</span><span >&gt;</span><span >Edit</span> <span >house</span> <span >details</span><span >&lt;</span><span >/a&gt;</span>                          <span >&lt;</span><span >/Link&gt;</span>                        <span >&lt;</span><span >/p&gt;</span>                      <span >&lt;</span><span >/div&gt;</span>                    <span >&lt;</span><span >/div&gt;</span>                  )                })}              <span >&lt;</span><span >/div&gt;</span>            <span >&lt;</span><span >/div&gt;</span>            <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;bookings&#39;</span><span >&gt;</span>              <span >&lt;</span><span >h2</span><span >&gt;</span><span >Your</span> <span >bookings</span><span >&lt;</span><span >/h2&gt;</span>              <span >&lt;</span><span >div</span> <span >className</span><span >=</span><span >&#39;list&#39;</span><span >&gt;</span>                {<span >props</span>.<span >bookings</span>.<span >map</span>((<span >booking</span>, <span >index</span>) =&gt; {                  <span >return</span> (                    <span >&lt;</span><span >div</span> <span >class</span><span >=</span><span >&#39;booking&#39;</span> <span >key</span><span >=</span>{<span >index</span>}<span >&gt;</span>                      <span >&lt;</span><span >div</span><span >&gt;</span>                        <span >&lt;</span><span >h2</span><span >&gt;</span>                          {<span >booking</span>.<span >house</span>.<span >title</span>} <span >in</span> {<span >booking</span>.<span >house</span>.<span >town</span>}                        <span >&lt;</span><span >/h2&gt;</span>                        <span >&lt;</span><span >p</span><span >&gt;</span>                          <span >Booked</span> <span >from</span>{<span >&#39; &#39;</span>}                          {<span >new</span> Date(<span >booking</span>.<span >booking</span>.<span >startDate</span>).<span >toDateString</span>()}{<span >&#39; &#39;</span>}                          <span >to</span> {<span >new</span> Date(<span >booking</span>.<span >booking</span>.<span >endDate</span>).<span >toDateString</span>()}                        <span >&lt;</span><span >/p&gt;</span>                      <span >&lt;</span><span >/div&gt;</span>                    <span >&lt;</span><span >/div&gt;</span>                  )                })}              <span >&lt;</span><span >/div&gt;</span>            <span >&lt;</span><span >/div&gt;</span>          <span >&lt;</span><span >/div&gt;</span>          <span >&lt;</span><span >style</span> <span >jsx</span><span >&gt;</span>{<span >`</span><span >            .container {</span><span >              display: grid;</span><span >              grid-template-columns: 60% 40%;</span><span >              grid-gap: 50px;</span><span >            }</span><span ></span><span >            .list {</span><span >              display: grid;</span><span >              grid-template-columns: 100%;</span><span >              grid-gap: 40px;</span><span >              margin-top: 60px;</span><span >            }</span><span ></span><span >            .house {</span><span >              display: grid;</span><span >              grid-template-columns: 30% 70%;</span><span >              grid-gap: 40px;</span><span >            }</span><span ></span><span >            .house img {</span><span >              width: 100px;</span><span >            }</span><span >          `</span>}<span >&lt;</span><span >/style&gt;</span>        <span >&lt;</span><span >/div&gt;</span>      }    <span >/&gt;</span>  )}<span >Host</span>.<span >getInitialProps</span> <span >=</span> <span >async</span> (<span >ctx</span>) =&gt; {  <span >const</span> <span >response</span> <span >=</span> <span >await</span> <span >axios</span>({    <span >method</span><span >:</span> <span >&#39;get&#39;</span>,    <span >url</span><span >:</span> <span >&#39;http://localhost:3000/api/host/list&#39;</span>,    <span >headers</span><span >:</span> <span >ctx</span>.<span >req</span> <span >?</span> { <span >cookie</span><span >:</span> <span >ctx</span>.<span >req</span>.<span >headers</span>.<span >cookie</span> } <span >:</span> <span >undefined</span>,  })  <span >return</span> {    <span >houses</span><span >:</span> <span >response</span>.<span >data</span>.<span >houses</span>,    <span >bookings</span><span >:</span> <span >response</span>.<span >data</span>.<span >bookings</span>,  }}<span >export</span> <span >default</span> <span >Host</span></code></pre></div><p>That&rsquo;s it! The houses and bookings list should be working, and it should look like this:</p><p><img src=\"1.png\" alt=\"The houses and bookings list\" /></p><p>Next part: <a href=\"https://flaviocopes.com/clone-airbnb-nextjs-32-adding-a-new-house/\">Airbnb clone, adding a new house</a></p>      ",
  "image": "https://flaviocopes.com/img/avatar.png",
  "description": "This post is part of a new series where we build a clone of Airbnb with Next.js. See the first post here.\n  Part 1: Let’s start by installing Next.js Part 2: Build the list of houses Part 3: Build the house detail view Part 4: CSS and navigation bar Part 5: Start with the date picker Part 6: Add the sidebar Part 7: Add react-day-picker Part 8: Add the calendar to the page Part 9: Configure the DayPickerInput component Part 10: Sync the start and end dates Part 11: Show the price for the chosen dates Part 12: Login and signup forms Part 13: Activate the modal Part 14: Send registration data to the server Part 15: Add postgres Part 16: Implement model and DB connection Part 17: Create a session token Part 18: Implement login Part 19: Determine if we are logged in Part 20: Change state after we login Part 21: Log in after registration Part 22: Create the models and move data to the db Part 23: Use the database instead of the file Part 24: Handle bookings Part 25: Handle booked dates Part 26: Prevent booking if already booked Part 27: Adding Stripe for payments Part 28: Airbnb clone, handling Stripe webhooks Part 29: Airbnb clone, view bookings Part 30: Airbnb clone, clean bookings  Now we’re going to create the exprience for hosts, rather than for people looking to book hosts’s homes.",
  "publisher": "Flaviocopes",
  "publisherUrl": "https://flaviocopes.com/"
}